// api/tweet.js
const mongoose = require('mongoose');

mongoose.connect(process.env.MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const tweetSchema = new mongoose.Schema({
  _id: { type: mongoose.Schema.Types.UUID },
  text: { type: String, required: true },
  profile_id: { type: mongoose.Schema.Types.UUID, required: true },
  created_at: { type: Date, required: true },
  updated_at: { type: Date, required: true },
});

const Tweet = mongoose.model('Tweet', tweetSchema);

module.exports = async (req, res) => {
  try {
    if (req.method === 'POST') {
      const { text, profile_id } = req.body;
      const tweet = new Tweet({
        _id: new mongoose.Types.UUID(),
        text,
        profile_id,
        created_at: new Date(),
        updated_at: new Date(),
      });
      await tweet.save();
      res.status(201).json({ message: 'Tweet added successfully' });
    } else if (req.method === 'GET') {
      const tweets = await Tweet.find();
      // Convert _id to string for each tweet
      const formattedTweets = tweets.map(tweet => ({
        ...tweet.toObject(),
        _id: tweet._id.toString(),
      }));
      res.json(formattedTweets);
    } else {
      res.status(400).json({ error: 'Invalid request method' });
    }
  } catch (error) {
    console.error('Error:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
};
